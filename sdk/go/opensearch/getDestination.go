// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `Destination` can be used to retrieve the destination object by name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-opensearch/sdk/go/opensearch"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := opensearch.LookupDestination(ctx, &GetDestinationArgs{
// 			Name: "my-destination",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupDestination(ctx *pulumi.Context, args *LookupDestinationArgs, opts ...pulumi.InvokeOption) (*LookupDestinationResult, error) {
	var rv LookupDestinationResult
	err := ctx.Invoke("opensearch:index/getDestination:getDestination", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDestination.
type LookupDestinationArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by getDestination.
type LookupDestinationResult struct {
	Body map[string]interface{} `pulumi:"body"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupDestinationOutput(ctx *pulumi.Context, args LookupDestinationOutputArgs, opts ...pulumi.InvokeOption) LookupDestinationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDestinationResult, error) {
			args := v.(LookupDestinationArgs)
			r, err := LookupDestination(ctx, &args, opts...)
			var s LookupDestinationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDestinationResultOutput)
}

// A collection of arguments for invoking getDestination.
type LookupDestinationOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupDestinationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationArgs)(nil)).Elem()
}

// A collection of values returned by getDestination.
type LookupDestinationResultOutput struct{ *pulumi.OutputState }

func (LookupDestinationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationResult)(nil)).Elem()
}

func (o LookupDestinationResultOutput) ToLookupDestinationResultOutput() LookupDestinationResultOutput {
	return o
}

func (o LookupDestinationResultOutput) ToLookupDestinationResultOutputWithContext(ctx context.Context) LookupDestinationResultOutput {
	return o
}

func (o LookupDestinationResultOutput) Body() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDestinationResult) map[string]interface{} { return v.Body }).(pulumi.MapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDestinationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDestinationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDestinationResultOutput{})
}
