// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Opensearch
{
    /// <summary>
    /// Provides an OpenSearch Dashboards object resource. This resource interacts directly with the underlying OpenSearch index backing Dashboards, so the format must match what Dashboards the version of Dashboards is expecting. Dashboards v5 and v6 will export all objects in Dashboards v5 format, so the exported objects cannot be used as a source for `body` in this resource - directly pulling the JSON from a Dashboards index of the same version of OpenSearch targeted by the provider is a workaround.
    /// 
    /// With the removal of mapping types in OpenSearch, the Dashboards index changed from v5 to &gt;= v6, previously the document mapping type had the Dashboards object type, however, the `_type` going forward is `doc` and the type is within the document, see below. Using v5 doc types in v6 and above will result in errors from OpenSearch after one or more document types are used.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Opensearch = Pulumi.Opensearch;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var testVisualizationV6 = new Opensearch.DashboardObject("testVisualizationV6", new Opensearch.DashboardObjectArgs
    ///         {
    ///             Body = @"[
    ///   {
    ///     ""_id"": ""visualization:response-time-percentile"",
    ///     ""_type"": ""doc"",
    ///     ""_source"": {
    ///       ""type"": ""visualization"",
    ///       ""visualization"": {
    ///         ""title"": ""Total response time percentiles"",
    ///         ""visState"": ""{\""title\"":\""Total response time percentiles\"",\""type\"":\""line\"",\""params\"":{\""addTooltip\"":true,\""addLegend\"":true,\""legendPosition\"":\""right\"",\""showCircles\"":true,\""interpolate\"":\""linear\"",\""scale\"":\""linear\"",\""drawLinesBetweenPoints\"":true,\""radiusRatio\"":9,\""times\"":[],\""addTimeMarker\"":false,\""defaultYExtents\"":false,\""setYExtents\"":false},\""aggs\"":[{\""id\"":\""1\"",\""enabled\"":true,\""type\"":\""percentiles\"",\""schema\"":\""metric\"",\""params\"":{\""field\"":\""app.total_time\"",\""percents\"":[50,90,95]}},{\""id\"":\""2\"",\""enabled\"":true,\""type\"":\""date_histogram\"",\""schema\"":\""segment\"",\""params\"":{\""field\"":\""@timestamp\"",\""interval\"":\""auto\"",\""customInterval\"":\""2h\"",\""min_doc_count\"":1,\""extended_bounds\"":{}}},{\""id\"":\""3\"",\""enabled\"":true,\""type\"":\""terms\"",\""schema\"":\""group\"",\""params\"":{\""field\"":\""system.syslog.program\"",\""size\"":5,\""order\"":\""desc\"",\""orderBy\"":\""_term\""}}],\""listeners\"":{}}"",
    ///         ""uiStateJSON"": ""{}"",
    ///         ""description"": """",
    ///         ""version"": 1
    ///       }
    ///     }
    ///   }
    /// ]
    /// 
    /// ",
    ///         });
    ///         var testVisualizationV7 = new Opensearch.DashboardObject("testVisualizationV7", new Opensearch.DashboardObjectArgs
    ///         {
    ///             Body = @"[
    ///   {
    ///     ""_id"": ""response-time-percentile"",
    ///     ""_source"": {
    ///       ""type"": ""visualization"",
    ///       ""visualization"": {
    ///         ""title"": ""Total response time percentiles"",
    ///         ""visState"": ""{\""title\"":\""Total response time percentiles\"",\""type\"":\""line\"",\""params\"":{\""addTooltip\"":true,\""addLegend\"":true,\""legendPosition\"":\""right\"",\""showCircles\"":true,\""interpolate\"":\""linear\"",\""scale\"":\""linear\"",\""drawLinesBetweenPoints\"":true,\""radiusRatio\"":9,\""times\"":[],\""addTimeMarker\"":false,\""defaultYExtents\"":false,\""setYExtents\"":false},\""aggs\"":[{\""id\"":\""1\"",\""enabled\"":true,\""type\"":\""percentiles\"",\""schema\"":\""metric\"",\""params\"":{\""field\"":\""app.total_time\"",\""percents\"":[50,90,95]}},{\""id\"":\""2\"",\""enabled\"":true,\""type\"":\""date_histogram\"",\""schema\"":\""segment\"",\""params\"":{\""field\"":\""@timestamp\"",\""interval\"":\""auto\"",\""customInterval\"":\""2h\"",\""min_doc_count\"":1,\""extended_bounds\"":{}}},{\""id\"":\""3\"",\""enabled\"":true,\""type\"":\""terms\"",\""schema\"":\""group\"",\""params\"":{\""field\"":\""system.syslog.program\"",\""size\"":5,\""order\"":\""desc\"",\""orderBy\"":\""_term\""}}],\""listeners\"":{}}"",
    ///         ""uiStateJSON"": ""{}"",
    ///         ""description"": """",
    ///         ""version"": 1
    ///       }
    ///     }
    ///   }
    /// ]
    /// 
    /// ",
    ///         });
    ///         var testIndexPatternV6 = new Opensearch.DashboardObject("testIndexPatternV6", new Opensearch.DashboardObjectArgs
    ///         {
    ///             Body = @"[
    ///   {
    ///     ""_id"": ""index-pattern:cloudwatch"",
    ///     ""_type"": ""doc"",
    ///     ""_source"": {
    ///       ""type"": ""index-pattern"",
    ///       ""index-pattern"": {
    ///         ""title"": ""cloudwatch-*"",
    ///         ""timeFieldName"": ""timestamp""
    ///       }
    ///     }
    ///   }
    /// ]
    /// 
    /// ",
    ///         });
    ///         var testIndexPatternV7 = new Opensearch.DashboardObject("testIndexPatternV7", new Opensearch.DashboardObjectArgs
    ///         {
    ///             Body = @"[
    ///   {
    ///     ""_id"": ""index-pattern:cloudwatch"",
    ///     ""_type"": ""doc"",
    ///     ""_source"": {
    ///       ""type"": ""index-pattern"",
    ///       ""index-pattern"": {
    ///         ""title"": ""cloudwatch-*"",
    ///         ""timeFieldName"": ""timestamp""
    ///       }
    ///     }
    ///   }
    /// ]
    /// 
    /// ",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [OpensearchResourceType("opensearch:index/dashboardObject:DashboardObject")]
    public partial class DashboardObject : Pulumi.CustomResource
    {
        /// <summary>
        /// The JSON body of the dashboard object.
        /// </summary>
        [Output("body")]
        public Output<string> Body { get; private set; } = null!;

        /// <summary>
        /// The name of the index where dashboard data is stored.
        /// </summary>
        [Output("index")]
        public Output<string?> Index { get; private set; } = null!;


        /// <summary>
        /// Create a DashboardObject resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DashboardObject(string name, DashboardObjectArgs args, CustomResourceOptions? options = null)
            : base("opensearch:index/dashboardObject:DashboardObject", name, args ?? new DashboardObjectArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DashboardObject(string name, Input<string> id, DashboardObjectState? state = null, CustomResourceOptions? options = null)
            : base("opensearch:index/dashboardObject:DashboardObject", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DashboardObject resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DashboardObject Get(string name, Input<string> id, DashboardObjectState? state = null, CustomResourceOptions? options = null)
        {
            return new DashboardObject(name, id, state, options);
        }
    }

    public sealed class DashboardObjectArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The JSON body of the dashboard object.
        /// </summary>
        [Input("body", required: true)]
        public Input<string> Body { get; set; } = null!;

        /// <summary>
        /// The name of the index where dashboard data is stored.
        /// </summary>
        [Input("index")]
        public Input<string>? Index { get; set; }

        public DashboardObjectArgs()
        {
        }
    }

    public sealed class DashboardObjectState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The JSON body of the dashboard object.
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// The name of the index where dashboard data is stored.
        /// </summary>
        [Input("index")]
        public Input<string>? Index { get; set; }

        public DashboardObjectState()
        {
        }
    }
}
