// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Opensearch
{
    /// <summary>
    /// Provides an Opensearch index template resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Opensearch = Pulumi.Opensearch;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         // Create an index template
    ///         var template1 = new Opensearch.IndexTemplate("template1", new Opensearch.IndexTemplateArgs
    ///         {
    ///             Body = @"{
    ///   ""template"": ""te*"",
    ///   ""settings"": {
    ///     ""number_of_shards"": 1
    ///   },
    ///   ""mappings"": {
    ///     ""type1"": {
    ///       ""_source"": {
    ///         ""enabled"": false
    ///       },
    ///       ""properties"": {
    ///         ""host_name"": {
    ///           ""type"": ""keyword""
    ///         },
    ///         ""created_at"": {
    ///           ""type"": ""date"",
    ///           ""format"": ""EEE MMM dd HH:mm:ss Z YYYY""
    ///         }
    ///       }
    ///     }
    ///   }
    /// }
    /// 
    /// ",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import opensearch:index/indexTemplate:IndexTemplate template_1 template_1
    /// ```
    /// </summary>
    [OpensearchResourceType("opensearch:index/indexTemplate:IndexTemplate")]
    public partial class IndexTemplate : Pulumi.CustomResource
    {
        /// <summary>
        /// The JSON body of the index template.
        /// </summary>
        [Output("body")]
        public Output<string> Body { get; private set; } = null!;

        /// <summary>
        /// The name of the index template.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a IndexTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IndexTemplate(string name, IndexTemplateArgs args, CustomResourceOptions? options = null)
            : base("opensearch:index/indexTemplate:IndexTemplate", name, args ?? new IndexTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IndexTemplate(string name, Input<string> id, IndexTemplateState? state = null, CustomResourceOptions? options = null)
            : base("opensearch:index/indexTemplate:IndexTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IndexTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IndexTemplate Get(string name, Input<string> id, IndexTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new IndexTemplate(name, id, state, options);
        }
    }

    public sealed class IndexTemplateArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The JSON body of the index template.
        /// </summary>
        [Input("body", required: true)]
        public Input<string> Body { get; set; } = null!;

        /// <summary>
        /// The name of the index template.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public IndexTemplateArgs()
        {
        }
    }

    public sealed class IndexTemplateState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The JSON body of the index template.
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// The name of the index template.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public IndexTemplateState()
        {
        }
    }
}
